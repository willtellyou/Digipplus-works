#Importing libraries
import gspread
import pandas as pd
import json
import numpy

#Setting up file collected from cloud console
cred_file="healthy-seeker-350608-663a7534ff2d.json"
gc=gspread.service_account(cred_file)
cred_file="healthy-seeker-350608-663a7534ff2d.json"
gc=gspread.service_account(cred_file)
cred_file="healthy-seeker-350608-663a7534ff2d.json"
gc=gspread.service_account(cred_file)
gc


#Getting the required google sheet and its particular sheet to automate
database=gc.open("Internal QC")
database

wks=database.worksheet("Performance")
wks


#Getting all the data from google sheet and converting them into dataframe for further processing
data=pd.DataFrame(wks.get_all_records())
data
list_wks=database.worksheets()
list_wks

data=pd.DataFrame(wks.get_all_records())
data

Name=data.loc[:,"Name"]
n=len(Name)
n


Qty_assigned=data.loc[:,"Qty assigned"]
Qty_submitted=data.loc[:,"Qty submitted"]
Qty_passed=[]
Communication_1=data.loc[:,"Communication1"]
Approved_r=data.loc[:,"Approved(R)"]
On_rework1=[]
On_rework2=[]
Approved_sr=data.loc[:,"Approved(SR)"]
Acumen=[]
Consistent=[]
Communication=[]
Accuracy=[]


for i in range(n):
    Qty_passed.append(Qty_assigned[i]-Qty_submitted[i])
    On_rework1.append(Qty_submitted[i]-Approved_r[i])
    On_rework2.append(On_rework1[i]-Approved_sr[i])
    Acumen.append((Qty_submitted[i]/Qty_assigned[i])*100)
    Consistent.append(Acumen[i])
    Communication.append(100-Communication_1[i])
    Accuracy.append((Approved_r[i]/Qty_submitted[i])*100)




#Automation of different  columns
Qty_passed



cell_list=wks.range('D2:D114')
#cell_values=Qty_passed.copy()
cell_values=[2, 10, 10, 20, 22, 4, 7, 7, 8, 8, 8,10]
#n,val=enumerate(cell_values)
for i,val in enumerate(cell_values):
    cell_list[i].value=val
wks.update_cells(cell_list)

On_rework1
cell_list=wks.range('G2:G114')
#cell_values=Qty_passed.copy()
cell_values=[3, 5, 10, 10, 19, 6, 10, 6, 8, 7, 7, 5]
#n,val=enumerate(cell_values)
for i,val in enumerate(cell_values):
    cell_list[i].value=val
#    cell_list[i].value=(val)
wks.update_cells(cell_list)


On_rework2
cell_list=wks.range('H2:H114')
#cell_values=Qty_passed.copy()
cell_values=[1, 4, 6, 5, 9, 4, 5, 3, 4, 4, 3, 3]
#n,val=enumerate(cell_values)
for i,val in enumerate(cell_values):
    cell_list[i].value=val
#    cell_list[i].value=(val)
wks.update_cells(cell_list)


Acumen
cell_list=wks.range('J2:J114')
#cell_values=Qty_passed.copy()
cell_values=[98.0,88.88888888888889,87.5,81.81818181818183,80.35714285714286,93.33333333333333,89.55223880597015, 91.95402298850574,91.83673469387756,89.74358974358975,91.83673469387756, 83.33333333333334]
#n,val=enumerate(cell_values)
for i,val in enumerate(cell_values):
    cell_list[i].value=val
#    cell_list[i].value=(val)
wks.update_cells(cell_list)


Consistent
cell_list=wks.range('K2:K14')
#cell_values=Qty_passed.copy()
cell_values=[98.0,88.88888888888889, 87.5,81.81818181818183,80.35714285714286,93.33333333333333,89.55223880597015,91.95402298850574,91.83673469387756,89.74358974358975, 91.83673469387756,83.33333333333334]
for i,val in enumerate(cell_values):
    cell_list[i].value=val
#    cell_list[i].value=(val)
wks.update_cells(cell_list)



Communication
cell_list=wks.range('L2:L14')
#cell_values=Qty_passed.copy()
cell_values=[100, 95, 98, 94, 96, 99, 93, 95, 96, 97, 98, 99]
#n,val=enumerate(cell_values)
for i,val in enumerate(cell_values):
    cell_list[i].value=val
#    cell_list[i].value=(val)
wks.update_cells(cell_list)




Accuracy
cell_list=wks.range('M2:M14')
#cell_values=Qty_passed.copy()
cell_values=[96.93877551020408,93.75,85.71428571428571,88.88888888888889,78.88888888888889,89.28571428571429,83.33333333333334,92.5,91.11111111111111, 90.0,92.22222222222223,90.0]
#n,val=enumerate(cell_values)
for i,val in enumerate(cell_values):
    cell_list[i].value=val
#    cell_list[i].value=(val)
wks.update_cells(cell_list)
